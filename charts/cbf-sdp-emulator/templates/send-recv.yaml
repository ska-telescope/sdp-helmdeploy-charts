apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "cbf_sdp_emulator.fullname" . }}-send-recv
  namespace: {{ .Release.Namespace }}
  labels:
{{ include "cbf_sdp_emulator.labels" . | indent 4 }}
spec:
  completions: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "cbf_sdp_emulator.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      restartPolicy: {{ .Values.cbf_sdp_emulator.restartPolicy }}
      initContainers:
      - name: set-up-input-dir
        image: alpine:latest # Any image with wget will do
        command: [ "sh","-c", "if [ -d /mnt/data ]; then exit 0 ; else mkdir /mnt/data ; fi "]
        volumeMounts:
          - mountPath: /mnt
            name: input-storage
      {{- if eq $.Values.model.pull true }}
      - name: pull-input-image
        image: alpine:latest # Any image with wget will do
        env:
          - name: MODEL_URL
            value: "{{ $.Values.model.url }}"
          - name: MODEL_NAME
            value: "{{ $.Values.model.name }}"
          {{- include "cbf_sdp_emulator.http-proxy" . | nindent 10 }}
        command: [ "sh","-c", "cd /mnt/data && apk add wget && wget $MODEL_URL "]
        volumeMounts:
          - mountPath: /mnt
            name: input-storage
      {{- end }}
      - name: default-input
        image:  alpine:latest
        env:
          - name: MODEL_URL
            value: "{{ $.Values.model.url }}"
          - name: MODEL_NAME
            value: "{{ $.Values.model.name }}"
          - name: MODEL_NAME
            value: "{{ $.Values.model.name }}"
          - name: MODEL_ARCHIVE
            value: "{{ $.Values.model.name }}.tar.gz"
        command: ["sh","-c","if [ -d /mnt/data/$MODEL_NAME ]; then exit 0 ; else cd /mnt/data/ && tar -xf $MODEL_ARCHIVE ; fi"]
        volumeMounts:
          - mountPath: /mnt
            name: input-storage
      containers:
      - image: {{ .Values.cbf_sdp_emulator.container }}:{{ .Values.cbf_sdp_emulator.version }}
        imagePullPolicy: {{ .Values.cbf_sdp_emulator.imagePullPolicy }}
        name: receiver
        command: ['sh','-c','emu-recv {{- range $key,$value := .Values.transmission}} {{ $prefix := "-o  transmission."}} {{ $prefix }} {{- $key }}={{- $value }} {{- end}}
                  {{- range $key,$value := .Values.reception}} {{ $prefix := " -o reception."}} {{ $prefix }} {{- $key }}={{- $value }} {{- end}}
                  {{- range $key,$value := .Values.reader}} {{ $prefix := " -o  reader."}} {{ $prefix }} {{- $key }}={{- $value }} {{- end}}
                  {{- range $key,$value := .Values.payload}} {{ $prefix := " -o  payload."}} {{ $prefix }} {{- $key }}={{- $value }} {{- end}}
                   -o reception.datamodel=/mnt/data/{{ $.Values.model.name }}
                  {{- if eq $.Values.results.push true }} && mv {{ $.Values.reception.outputfilename }} /mnt/data/{{- $.Values.reception.outputfilename }}
                  && touch /mnt/data/done {{- end }} ']
        volumeMounts:
        - mountPath: /mnt
          name: input-storage
        {{- with .Values.receiver.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
      {{- if eq $.Values.results.push true }}
      - image: rclone/rclone:latest
        name: rclone-push
        {{- if eq $.Values.proxy.use true }}
        env:
          {{- include "cbf_sdp_emulator.http-proxy" . | nindent 10 }}
        {{- end }}
        command: ['sh','-c','rclone copyurl -L {{ $.Values.rclone.configurl }} /mnt/data/rclone.conf ; while [[ ! -f /mnt/data/done ]]; do sleep 10; done;
                              rclone copy --config=/mnt/data/rclone.conf /mnt/data/{{- $.Values.reception.outputfilename }} {{ $.Values.rclone.command }}' ]
        volumeMounts:
        - mountPath: /mnt
          name: input-storage
        {{- with .Values.receiver.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
      {{- end }}
      {{- if eq $.Values.transmit.model true }}
      - image: {{ .Values.cbf_sdp_emulator.container }}:{{ .Values.cbf_sdp_emulator.version }}
        imagePullPolicy: {{ .Values.cbf_sdp_emulator.imagePullPolicy }}
        name: sender
        command: ["emu-send", "/mnt/data/{{ $.Values.model.name }}", "-o", "transmission.channels_per_stream={{ $.Values.transmission.channels_per_stream }}", "-o", "transmission.rate={{ $.Values.transmission.rate }}"]
        volumeMounts:
        - mountPath: /mnt
          name: input-storage
        {{- with .Values.sender.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
      {{- end }}
      volumes:
      - name: input-storage
        emptyDir: {}

  backoffLimit: 1




